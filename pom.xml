<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>blooptest</groupId>
  <artifactId>blooptest-scala</artifactId>
  <version>1.0-SNAPSHOT</version>

  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

<properties>
        <maven-scala-plugin.version>4.1.1</maven-scala-plugin.version>
        <maven-scala-test-plugin.version>2.0.0</maven-scala-test-plugin.version>
<scala.version.short>2.11</scala.version.short>
        <scala.version>${scala.version.short}.12</scala.version>
<scala.dependencies.version>${scala.version.short}</scala.dependencies.version>
        <scalatest.version>3.0.8</scalatest.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
        <scala.parallel.unit.test>false</scala.parallel.unit.test>
    <sourceDir>src/main/scala</sourceDir>
  </properties>

  <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.version.short}</artifactId>
            <version>${scalatest.version}</version>
            <scope>test</scope>
        </dependency>
</dependencies>

  <build>
<plugins>
<plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${maven-scala-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>add-source</goal>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>scala-test-compile</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <scalaVersion>${scala.version}</scalaVersion>
                        <sourceDir>${project.basedir}/src/main/scala/</sourceDir>
                        <args>
                            <arg>-unchecked</arg>
                            <arg>-target:jvm-1.8</arg>
                            <!-- long filename error on encrypted ubuntu home using encryptfs-->
                            <arg>-Xmax-classfile-name</arg>
                            <arg>255</arg>
                            <arg>-encoding</arg>
                            <arg>UTF-8</arg>
-                            <!--<arg>-Ylog-classpath</arg>-->
                            <arg>-deprecation</arg> <!-- Emit warning and location for usages of deprecated APIs. -->
                            <arg>-feature
                            </arg> <!-- Emit warning and location for usages of features that should be imported explicitly. -->
                            <arg>-Xfuture</arg> <!-- Disables adapted arguments by inserting ()
                                                         Disables support of Octal Characters
                                                         Generates deprecation warnings for View Bounds
                                                         Generates warnings when using filter instead of withFilter in for comprehensions
                                                         Disables the assumption that Identifiers and selections in Pattern Matches are unsound (see SI-1503 for more information)-->
                            <arg>-Xcheckinit
                            </arg> <!-- Wrap field accessors to throw an exception on uninitialized access -->
                            <arg>-Xfatal-warnings</arg> <!-- Fail the compilation if there are any warnings. -->
                            <arg>-Xlint:inaccessible</arg> <!-- Warn about inaccessible types in method signatures. -->
                            <arg>-Xlint:infer-any</arg> <!-- Warn when a type argument is inferred to be Any. -->
                            <arg>-Xlint:nullary-unit
                            </arg> <!-- Warn when nullary methods (side affecting) return Unit. -->
                            <arg>-Xlint:package-object-classes
                            </arg> <!-- Warn when class or object defined in package object. -->
                            <arg>-Xlint:poly-implicit-overload
                            </arg> <!-- Warn when parameterized overloaded implicit methods are not visible as view bounds. -->
                            <arg>-Xlint:private-shadow
                            </arg> <!-- Warn when a private field (or class parameter) shadows a superclass field. -->
                            <arg>-Xlint:type-parameter-shadow
                            </arg> <!-- Warn when a local type parameter shadows a type already in scope. -->
                            <arg>-Xlint:unsound-match</arg> <!-- Warn when pattern match may not be typesafe -->
                            <arg>-Xlint:nullary-override
                            </arg> <!-- Warn when non-nullary def f() overrides nullary def f. -->
                            <arg>-Yno-adapted-args
                            </arg> <!-- Do not adapt an argument list (either by inserting () or creating a tuple) to match the receiver. -->
                            <arg>-Ywarn-dead-code</arg> <!-- Warn when dead code is identified -->
                            <arg>-Ywarn-unused</arg>
                            <arg>-Ywarn-numeric-widen</arg> <!-- Warn when numerics are widened -->
                            <arg>-Ywarn-value-discard</arg> <!-- Warn when non-Unit expression results are unused. -->
                            <arg>-Ypartial-unification</arg> <!--Needed because scala compiler bug https://github.com/scala/bug/issues/2712. -->
                        </args>
                        <recompileMode>incremental</recompileMode>
                    </configuration>
                </plugin>

                <plugin>
                    <!-- enable scalatest -->
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest-maven-plugin</artifactId>
                    <version>${maven-scala-test-plugin.version}</version>
                    <configuration>
                        <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                        <junitxml>.</junitxml>
                        <filereports>WDF TestSuite.txt</filereports>
                        <!--<forkMode>once</forkMode>-->
                    </configuration>
                    <executions>

                        <execution>
                            <id>unit-test</id>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <configuration>
                                <tagsToExclude>com.bmw.ad.common.test.tag.Integration,com.bmw.ad.common.test.tag.IntegrationTest</tagsToExclude>
                                <parallel>${scala.parallel.unit.test}</parallel>
                            </configuration>
                        </execution>
                        <execution>
                            <id>integration-test</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <configuration>
                                <skipTests>${integration.skipTests}</skipTests>
                                <tagsToInclude>Integration,com.bmw.ad.common.test.tag.Integration,com.bmw.ad.common.test.tag.IntegrationTest</tagsToInclude>
                                <parallel>${scala.parallel.integration.test}</parallel>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

      </plugins>
  </build>
</project>
